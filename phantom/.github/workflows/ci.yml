name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    - name: Install dependencies
      run: |
        pip install -e ".[dev]"
    - name: Lint with ruff
      run: ruff check .
    - name: Format with black
      run: black --check .
    - name: Type check with mypy
      run: mypy phantom_core phantom_cli

  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.11', '3.12']
    
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        pip install -e ".[dev,vision]"
    
    - name: Test with pytest
      run: |
        pytest tests/ -v --cov=phantom_core --cov-report=xml
    
    - name: Upload coverage
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml

  test-cuda:
    runs-on: ubuntu-latest
    container:
      image: pytorch/pytorch:2.4.0-cuda12.1-cudnn8-runtime
    
    steps:
    - uses: actions/checkout@v3
    - name: Install dependencies
      run: |
        pip install -e ".[dev,vision]"
    
    - name: Test CUDA functionality
      run: |
        pytest tests/ -v -m cuda

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Build package
      run: |
        pip install build
        python -m build
    
    - name: Check package
      run: |
        pip install twine
        twine check dist/*
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist/