[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "phantom-debug"
version = "0.2.0"
description = "Cross-accelerator deterministic debugger for AI models"
authors = [{name = "ML Systems Team", email = "team@phantom-debug.org"}]
readme = "README.md"
license = {file = "LICENSE"}
requires-python = ">=3.11"
keywords = ["debugging", "pytorch", "cuda", "mps", "rocm", "quantization", "ml"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Debuggers",
]

dependencies = [
    "torch>=2.4.0",
    "numpy>=1.24.0",
    "matplotlib>=3.5.0",
    "plotly>=5.0.0",
    "tabulate>=0.9.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "ruff>=0.1.0",
    "black>=23.0",
    "mypy>=1.0",
    "pre-commit>=3.0",
]
vision = [
    "torchvision>=0.15.0",
]
distributed = [
    "torch-distributed>=2.4.0",
]
docs = [
    "sphinx>=5.0",
    "sphinx-rtd-theme>=1.0",
    "myst-parser>=1.0",
]

[project.scripts]
phantom = "phantom_cli.main:main"

[project.urls]
Homepage = "https://phantom-debug.org"
Documentation = "https://docs.phantom-debug.org"
Repository = "https://github.com/phantom-ai/phantom"
Issues = "https://github.com/phantom-ai/phantom/issues"

[tool.setuptools.packages.find]
include = ["phantom_core*", "phantom_cli*"]

[tool.ruff]
line-length = 100
target-version = "py311"
select = [
    "E",    # pycodestyle errors
    "F",    # pyflakes
    "I",    # isort
    "N",    # pep8-naming
    "UP",   # pyupgrade
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "SIM",  # flake8-simplify
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
]

[tool.black]
line-length = 100
target-version = ["py311", "py312"]
include = '\.pyi?    return logging.getLogger(name)